// Generated by CoffeeScript 1.6.2
(function() {
  var EmberHandlebarsCompiler, compileHBS, fs, sysPath;

  sysPath = require('path');

  fs = require('fs');

  compileHBS = require('./ember-handlebars-compiler');

  module.exports = EmberHandlebarsCompiler = (function() {
    EmberHandlebarsCompiler.prototype.brunchPlugin = true;

    EmberHandlebarsCompiler.prototype.type = 'template';

    EmberHandlebarsCompiler.prototype.extension = 'hbs';

    EmberHandlebarsCompiler.prototype.precompile = false;

    EmberHandlebarsCompiler.prototype.root = null;

    EmberHandlebarsCompiler.prototype.modulesPrefix = '';

    function EmberHandlebarsCompiler(config) {
      this.config = config;
      if (this.config.files.templates.precompile === true) {
        this.precompile = true;
      }
      if (this.config.files.templates.root != null) {
        this.root = sysPath.join('app', this.config.files.templates.root, sysPath.sep);
      }
      if (this.config.modules.wrapper === true) {
        this.modulesPrefix = 'module.exports = ';
      }
      null;
    }

    EmberHandlebarsCompiler.prototype.compile = function(data, path, callback) {
      var content, err, error, result, tmplName, tmplPath;

      try {
        tmplPath = path.replace(this.root, '');
        tmplPath = tmplPath.replace(/\\/g, '/');
        tmplPath = tmplPath.substr(0, tmplPath.length - sysPath.extname(tmplPath).length);
        tmplName = "Ember.TEMPLATES['" + tmplPath + "']";
        if (this.precompile === true) {
          content = compileHBS(data.toString());
          return result = "" + this.modulesPrefix + tmplName + " = Ember.Handlebars.template(" + content + ");";
        } else {
          content = JSON.stringify(data.toString());
          return result = "" + this.modulesPrefix + tmplName + " = Ember.Handlebars.compile(" + content + ");";
        }
      } catch (_error) {
        err = _error;
        return error = err;
      } finally {
        callback(error, result);
      }
    };

    return EmberHandlebarsCompiler;

  })();

}).call(this);
